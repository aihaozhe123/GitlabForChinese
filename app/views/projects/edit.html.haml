.project-edit-container
  .row.prepend-top-default
    .col-lg-3.profile-settings-sidebar
      %h4.prepend-top-0
        项目设置
    .col-lg-9
      .project-edit-errors
      = form_for [@project.namespace.becomes(Namespace), @project], remote: true, html: { multipart: true, class: "edit-project" }, authenticity_token: true do |f|
        %fieldset.append-bottom-0
          .row
            .form-group.col-md-9
              = f.label :name, class: 'label-light', for: 'project_name_edit' do
                项目名称
              = f.text_field :name, class: "form-control", id: "project_name_edit"

            .form-group.col-md-3
              = f.label :id, class: 'label-light' do
                项目ID
              = f.text_field :id, class: 'form-control', readonly: true

          .form-group
            = f.label :description, class: 'label-light' do
              项目描述
              %span.light (可选)
            = f.text_area :description, class: "form-control", rows: 3, maxlength: 250

          - unless @project.empty_repo?
            .form-group
              = f.label :default_branch, "默认分支", class: 'label-light'
              = f.select(:default_branch, @project.repository.branch_names, {}, {class: 'select2 select-wide'})
        .form-group
          = f.label :tag_list, "标签", class: 'label-light'
          = f.text_field :tag_list, value: @project.tag_list.to_s, maxlength: 2000, class: "form-control"
          %p.help-block 使用英文逗号分割。
        %hr
        %fieldset.append-bottom-0
          %h5.prepend-top-0
            分享 &amp; 权限
          .form_group.prepend-top-20.sharing-and-permissions
            .row.js-visibility-select
              .col-md-9
                %label.label-light
                  = label_tag :project_visibility, '项目可见性', class: 'label-light'
                  = link_to "(?)", help_page_path("public_access/public_access")
                %span.help-block
              .col-md-3.visibility-select-container
                = render('projects/visibility_select', model_method: :visibility_level, form: f, selected_level: @project.visibility_level)
            = f.fields_for :project_feature do |feature_fields|
              %fieldset.features
                .row
                  .col-md-9.project-feature
                    = feature_fields.label :repository_access_level, "存储库", class: 'label-light'
                    %span.help-block 推送文件以存储在此项目中
                  .col-md-3.js-repo-access-level
                    = project_feature_access_select(:repository_access_level)

                .row
                    .col-md-9.project-feature.nested
                      = feature_fields.label :merge_requests_access_level, "合并请求", class: 'label-light'
                      %span.help-block 提交要在上游合并的更改
                    .col-md-3
                      = project_feature_access_select(:merge_requests_access_level)

                  .row
                    .col-md-9.project-feature.nested
                      = feature_fields.label :builds_access_level, "构建", class: 'label-light'
                      %span.help-block 在合并之前提交，测试和部署更改
                    .col-md-3
                      = project_feature_access_select(:builds_access_level)

              .row
                .col-md-9.project-feature
                  = feature_fields.label :snippets_access_level, "代码段", class: 'label-light'
                  %span.help-block 共享 Git 版本仓库外的代码
                .col-md-3
                  = project_feature_access_select(:snippets_access_level)

              .row
                .col-md-9.project-feature
                  = feature_fields.label :issues_access_level, "问题", class: 'label-light'
                  %span.help-block 轻量级问题跟踪系统
                .col-md-3
                  = project_feature_access_select(:issues_access_level)

              .row
                .col-md-9.project-feature
                  = feature_fields.label :wiki_access_level, "Wiki", class: 'label-light'
                  %span.help-block 项目文档的页面
                .col-md-3
                  = project_feature_access_select(:wiki_access_level)

          - if Gitlab.config.lfs.enabled && current_user.admin?
            .row
              .col-md-9
                = f.label :lfs_enabled, 'LFS', class: 'label-light'
                %span.help-block
                  Git大文件存储
                  = link_to icon('question-circle'), help_page_path('workflow/lfs/manage_large_binaries_with_git_lfs')
              .col-md-3
                = f.select :lfs_enabled, [%w(Enabled true), %w(Disabled false)], {}, selected: @project.lfs_enabled?, class: 'pull-right form-control', data: { field: 'lfs_enabled' }


        - if Gitlab.config.registry.enabled
          .form-group.js-container-registry{ style: ("display: none;" if @project.project_feature.send(:repository_access_level) == 0) }
            .checkbox
              = f.label :container_registry_enabled do
                = f.check_box :container_registry_enabled
                %strong 容器注册表
                %br
                %span.descr 启用此项目的容器注册表
                = link_to icon('question-circle'), help_page_path('user/project/container_registry'), target: '_blank'

        = render 'merge_request_settings', form: f

        %hr
        %fieldset.features.append-bottom-default
          %h5.prepend-top-0
            项目头像：
          .form-group
            - if @project.avatar?
              .avatar-container.s160
                = project_icon("#{@project.namespace.to_param}/#{@project.to_param}", alt: '', class: 'avatar project-avatar s160')
            %p.light
              - if @project.avatar_in_git
                项目头像保存在版本仓库： #{ @project.avatar_in_git }
            %a.choose-btn.btn.js-choose-project-avatar-button
              选择文件...
            %span.file_name.prepend-left-default.js-avatar-filename 没有选择文件
            = f.file_field :avatar, class: "js-project-avatar-input hidden"
            .help-block 文件大小限制为 200KB。
            - if @project.avatar?
              %hr
              = link_to '删除头像', namespace_project_avatar_path(@project.namespace, @project), data: { confirm: "确定要删除项目头像么？"}, method: :delete, class: "btn btn-remove btn-sm remove-avatar"
        = f.submit '保存修改', class: "btn btn-save"

  .row.prepend-top-default
  %hr
  .row.prepend-top-default
    .col-lg-3
      %h4.prepend-top-0
        维护
      %p.append-bottom-0
        %p
          执行当前仓库的一些维护任务，诸如压缩文件修订版本和删除无用对象等。
    .col-lg-9
      = link_to '维护', housekeeping_namespace_project_path(@project.namespace, @project),
          method: :post, class: "btn btn-default"
  %hr
  .row.prepend-top-default
    .col-lg-3
      %h4.prepend-top-0
        导出项目
      %p.append-bottom-0
        %p
          导出这个项目所有的相关数据,一旦导出完成，您可以从“新项目”页面导入文件来创建新的gitlab实例。
        %p
          一旦导出的文件准备好，您将收到一个与下载链接的电子邮件通知。

    .col-lg-9

      - if @project.export_project_path
        = link_to '下载导出',  download_export_namespace_project_path(@project.namespace, @project),
                method: :get, class: "btn btn-default"
        = link_to '从新生成导出',  generate_new_export_namespace_project_path(@project.namespace, @project),
                method: :post, class: "btn btn-default"
      - else
        = link_to '导出项目', export_namespace_project_path(@project.namespace, @project),
                method: :post, class: "btn btn-default"

      .bs-callout.bs-callout-info
        %p.append-bottom-0
          %p
            下列项目将被导出：
          %ul
            %li 项目和维基知识库
            %li 项目更新
            %li 项目配置(包括网络，钩子和服务)
            %li 问题与评论，合并请求的差异和评论，标签，里程碑，片段，和其他项目实体
          %p
            下列项目将不会被导出：
          %ul
            %li 工作跟踪和附件
            %li LFS 对象
            %li 容器注册表镜像
            %li CI 变量
            %li 任何加密令牌
  - if can? current_user, :archive_project, @project
    %hr
    .row.prepend-top-default
      .col-lg-3
        %h4.warning-title.prepend-top-0
          - if @project.archived?
            解档项目
          - else
            归档项目
        %p.append-bottom-0
          - if @project.archived?
            解档项目将恢复项目版本仓库可修改。项目可以被提交。
          - else
            归档项目将标识其版本仓库为只读。同时将在仪表盘隐藏并且不能搜索到。
      .col-lg-9
        - if @project.archived?
          %p
            %strong 解档后该项目可以被搜索到并显示在仪表盘中。
          = link_to '解档项目', unarchive_namespace_project_path(@project.namespace, @project),
              data: { confirm: "确定要解档本项目么？\n解档项目后可以重新提交版本仓库修改。" },
              method: :post, class: "btn btn-success"
        - else
          %p
            %strong 已归档的项目不能被提交！
          = link_to '归档项目', archive_namespace_project_path(@project.namespace, @project),
              data: { confirm: "确定要归档本项目么？\n已归档的项目不能被提交。" },
              method: :post, class: "btn btn-warning"
  %hr
  .row.prepend-top-default
    .col-lg-3
      %h4.prepend-top-0.warning-title
        重命名仓库
    .col-lg-9
      = render 'projects/errors'
      = form_for([@project.namespace.becomes(Namespace), @project]) do |f|
        .form-group.project_name_holder
          = f.label :name, class: 'label-light' do
            项目名称
          .form-group
            = f.text_field :name, class: "form-control"
        .form-group
          = f.label :path, class: 'label-light' do
            %span 路径
          .form-group
            .input-group
              .input-group-addon
                #{URI.join(root_url, @project.namespace.path)}/
              = f.text_field :path, class: 'form-control'
          %ul
            %li 请小心。重命名项目仓库可能有意想不到的副作用。
            %li 需要更新本地版本仓库指向新位置。
        = f.submit '重命名项目', class: "btn btn-warning"
  - if can?(current_user, :change_namespace, @project)
    %hr
    .row.prepend-top-default
      .col-lg-3
        %h4.prepend-top-0.danger-title
          转移项目
      .col-lg-9
        = form_for([@project.namespace.becomes(Namespace), @project], url: transfer_namespace_project_path(@project.namespace, @project), method: :put, remote: true) do |f|
          .form-group
            = label_tag :new_namespace_id, nil, class: 'label-light' do
              %span 命名空间
            .form-group
              = select_tag :new_namespace_id, namespaces_options(@project.namespace_id), { prompt: '选择项目命名空间', class: 'select2' }
            %ul
              %li 请注意：更改项目的命名空间可能有意想不到的副作用。
              %li 只能将项目转移到能管理到的命名空间。
              %li 需要更新本地版本仓库指向新位置。
              %li 项目转移到群组时其可见度等级将自动匹配新的命名空间规则。
          = f.submit '转移项目', class: "btn btn-remove js-confirm-danger", data: { "confirm-danger-message" => transfer_project_message(@project) }
  - if @project.forked? && can?(current_user, :remove_fork_project, @project)
    %hr
    .row.prepend-top-default.append-bottom-default
      .col-lg-3
        %h4.prepend-top-0.danger-title
          删除派生关系
        %p.append-bottom-0
          %p
            这将删除源项目
            = succeed "。" do
              = link_to @project.forked_from_project.name_with_namespace, project_path(@project.forked_from_project)
              的派生关系
      .col-lg-9
        = form_for([@project.namespace.becomes(Namespace), @project], url: remove_fork_namespace_project_path(@project.namespace, @project), method: :delete, remote: true, html: { class: 'transfer-project' }) do |f|
          %p
            %strong 一旦删除，派生关系无法恢复；也将无法在提交合并请求到源项目。
          = button_to '删除派生关系', '#', class: "btn btn-remove js-confirm-danger", data: { "confirm-danger-message" => remove_fork_project_message(@project) }
  - if can?(current_user, :remove_project, @project)
    %hr
    .row.prepend-top-default.append-bottom-default
      .col-lg-3
        %h4.prepend-top-0.danger-title
          删除项目
        %p.append-bottom-0
          删除项目将删除其版本仓库及所有相关资源，包括问题，合并请求等。
      .col-lg-9
        = form_tag(namespace_project_path(@project.namespace, @project), method: :delete) do
          %p
            %strong 删除项目无法恢复！
          = button_to '删除项目', '#', class: "btn btn-remove js-confirm-danger", data: { "confirm-danger-message" => remove_project_message(@project) }

.save-project-loader.hide
  .center
    %h2
      %i.fa.fa-spinner.fa-spin
      正在保存项目。
    %p 请稍等片刻，页面会在准备好后自动刷新。

= render 'shared/confirm_modal', phrase: @project.path
