#register-pane.tab-pane.login-box{ role: 'tabpanel' }
  .login-body
    = form_for(resource, as: "new_#{resource_name}", url: registration_path(resource_name), html: { class: "new_new_user gl-show-field-errors", "aria-live" => "assertive" }) do |f|
      .devise-errors
        = devise_error_messages!
      .form-group
        = f.label '姓名'
        = f.text_field :name, class: "form-control top", required: true, title: "这是必填项。"
      .username.form-group
        = f.label '用户名'
        = f.text_field :username, class: "form-control middle", pattern: Gitlab::Regex::NAMESPACE_REGEX_STR_SIMPLE, required: true, title: '请创建一个仅包含字母数字字符的用户名。'
        %p.validation-error.hide Username is already taken.
        %p.validation-success.hide Username is available.
        %p.validation-pending.hide Checking username availability...
      .form-group
        = f.label '邮件地址'
        = f.email_field :email, class: "form-control middle", required: true, title: "请提供有效的电子邮件地址。"
      .form-group
        = f.label '确认邮件地址'
        = f.email_field :email_confirmation, class: "form-control middle", required: true, title: "请重新输入电子邮件地址。"
      .form-group.append-bottom-20#password-strength
        = f.label '密码'
        = f.password_field :password, class: "form-control bottom", required: true, pattern: ".{#{@minimum_password_length},}", title: "最小长度为 #{@minimum_password_length} 个字符。"
        %p.gl-field-hint 最小长度为#{@minimum_password_length}个字符
      %div
      - if Gitlab::Recaptcha.enabled?
        = recaptcha_tags
      %div
        = f.submit "注册", class: "btn-register btn"
.clearfix.submit-container
  %p
    %span.light 没有收到确认邮件？
    = succeed '.' do
      = link_to "重新发送", new_confirmation_path(resource_name)
